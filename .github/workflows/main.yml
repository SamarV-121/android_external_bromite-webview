name: Update bromite prebuilts

on:
  schedule: [cron: '0 0 * * *']
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repo
      uses: actions/checkout@v3

    - name: Compare latest version with current version
      id: compare
      run: |
        update=1
        curl -s https://api.github.com/repos/bromite/bromite/releases/latest >bromite-release.json
        VERSION=$(jq -r '.tag_name' <bromite-release.json)
        CURRENT_VESION=$(git log -n 1 --pretty=format:'%s')
        [[ "$VERSION" == "$CURRENT_VESION" ]] && update=0
        echo ::set-output name=update::$update

    - name: Fetch latest bromite
      if: steps.compare.outputs.update == 1
      run: |
        for apk in x86_SystemWebView.apk arm_SystemWebView.apk arm64_SystemWebView.apk; do 
          wget -q "$(jq -r '.assets | .[] | select(.name=='\"$apk\"') | .browser_download_url' <bromite-release.json)" -O "$apk"
        done

    - name: Commit
      if: steps.compare.outputs.update == 1
      run: |
        git config user.name "SamarV-121"
        git config user.email "samarvispute121@pm.me"

        VERSION=$(jq -r '.tag_name' <bromite-release.json)
        git add *.apk
        git commit -m "$VERSION"

    - name: Push
      if: steps.compare.outputs.update == 1
      uses: ad-m/github-push-action@master
      with:
        force: true
        github_token: ${{ secrets.GITHUB_TOKEN }}
